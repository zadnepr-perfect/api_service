  services:
    hello-api:
      image: zadnepr/go-api:latest
      ports:
        - "${APP_PORT}:8080"
      env_file:
        - .env
      volumes:
        - .:/app  # Привязываем локальный код к контейнеру
        - /app/tmp  # Исключаем сборочные артефакты 
      environment:
        - APP_PORT=8080  # Указываем порт приложения
      command: >
        /app/scripts/wait-for-it.sh postgres:5432 -- 
        bash -c "air"
      restart: always
      depends_on:
        - postgres
      networks:
        - app-network

    postgres:
      image: postgres:15
      environment:
        POSTGRES_DB: ${DB_NAME}
        POSTGRES_USER: ${DB_USER}
        POSTGRES_PASSWORD: ${DB_PASSWORD}
      ports:
        - "${DB_PORT}:5432"
      volumes:
        - ./docker/data/postgres:/var/lib/postgresql/data
      networks:
        - app-network

    migrate:
      image: zadnepr/migrate:latest
      volumes:
        - ./migrations:/migrations
        - ./scripts/wait-for-it.sh:/usr/local/bin/wait-for-it.sh
      entrypoint: ["/bin/sh", "-c"]
      environment:
        - DB_USER=${DB_USER}
        - DB_PASSWORD=${DB_PASSWORD}
        - DB_PORT=${DB_PORT}
        - DB_NAME=${DB_NAME}
      command: >
          /usr/local/bin/wait-for-it.sh postgres:${DB_PORT} -- \
          bash -c "migrate -path /migrations -database 'postgres://${DB_USER}:${DB_PASSWORD}@postgres:${DB_PORT}/${DB_NAME}?sslmode=disable' up && \
          tail -f /dev/null"
      depends_on:
        - postgres
      networks:
        - app-network
    
  networks:
    app-network:
      driver: bridge

  volumes:
    postgres-data: